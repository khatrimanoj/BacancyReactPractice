{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Admin\\\\OneDrive\\\\Documents\\\\BacancyProjects\\\\ReactDemo\\\\react-practices\\\\src\\\\components\\\\Form\\\\Form.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport Button from \"../Button/Button\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const FormContext = /*#__PURE__*/React.createContext({\n  form: {}\n});\nfunction Form(props) {\n  _s();\n  const {\n    children,\n    submit = () => {},\n    initialValues\n  } = props;\n  const [form, setForm] = useState(initialValues);\n  const handleFormChange = event => {\n    // Clone form because we need to modify it\n    const updatedForm = {\n      ...form\n    };\n\n    // Get the name of the field that caused this change event\n    // Get the new value of this field\n    // Assign new value to the appropriate form field\n    updatedForm[event.target.name] = event.target.value;\n    console.log(\"Form changed: \", updatedForm);\n\n    // Update state\n    setForm(updatedForm);\n  };\n  // const handleFormChange = (event) => {\n  //   // Get the name of the field that caused this change event\n  //   // Get the new value of this field\n  //   const { name, value } = event.target;\n\n  //   // Update state\n  //   // Assign new value to the appropriate form field\n  //   setForm({\n  //     ...form,\n  //     [name]: value,\n  //   });\n  // };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: \"form\",\n    children: [/*#__PURE__*/_jsxDEV(FormContext.Provider, {\n      value: {\n        form,\n        handleFormChange\n      },\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"button pt-4\",\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        type: \"button\",\n        className: \"btn-primary\",\n        onClick: () => submit(form),\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n}\n_s(Form, \"Y29oJGteCsBRaHqub1iJGgShZ98=\");\n_c = Form;\nexport default Form;\nvar _c;\n$RefreshReg$(_c, \"Form\");","map":{"version":3,"names":["React","useState","Button","jsxDEV","_jsxDEV","FormContext","createContext","form","Form","props","_s","children","submit","initialValues","setForm","handleFormChange","event","updatedForm","target","name","value","console","log","className","Provider","fileName","_jsxFileName","lineNumber","columnNumber","type","onClick","_c","$RefreshReg$"],"sources":["C:/Users/Admin/OneDrive/Documents/BacancyProjects/ReactDemo/react-practices/src/components/Form/Form.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport Button from \"../Button/Button\";\r\n\r\nexport const FormContext = React.createContext({\r\n  form: {},\r\n});\r\n\r\nfunction Form(props) {\r\n  const { children, submit = () => {}, initialValues } = props;\r\n\r\n  const [form, setForm] = useState(initialValues);\r\n  const handleFormChange = (event) => {\r\n    // Clone form because we need to modify it\r\n    const updatedForm = { ...form };\r\n\r\n    // Get the name of the field that caused this change event\r\n    // Get the new value of this field\r\n    // Assign new value to the appropriate form field\r\n    updatedForm[event.target.name] = event.target.value;\r\n\r\n    console.log(\"Form changed: \", updatedForm);\r\n\r\n    // Update state\r\n    setForm(updatedForm);\r\n  };\r\n  // const handleFormChange = (event) => {\r\n  //   // Get the name of the field that caused this change event\r\n  //   // Get the new value of this field\r\n  //   const { name, value } = event.target;\r\n\r\n  //   // Update state\r\n  //   // Assign new value to the appropriate form field\r\n  //   setForm({\r\n  //     ...form,\r\n  //     [name]: value,\r\n  //   });\r\n  // };\r\n\r\n  return (\r\n    <form className=\"form\">\r\n      <FormContext.Provider\r\n        value={{\r\n          form,\r\n          handleFormChange,\r\n        }}\r\n      >\r\n        {children}\r\n      </FormContext.Provider>\r\n\r\n      <div className=\"button pt-4\">\r\n        <Button\r\n          type=\"button\"\r\n          className=\"btn-primary\"\r\n          onClick={() => submit(form)}\r\n        >\r\n          Submit\r\n        </Button>\r\n      </div>\r\n    </form>\r\n  );\r\n}\r\n\r\nexport default Form;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,MAAM,MAAM,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEtC,OAAO,MAAMC,WAAW,gBAAGL,KAAK,CAACM,aAAa,CAAC;EAC7CC,IAAI,EAAE,CAAC;AACT,CAAC,CAAC;AAEF,SAASC,IAAIA,CAACC,KAAK,EAAE;EAAAC,EAAA;EACnB,MAAM;IAAEC,QAAQ;IAAEC,MAAM,GAAGA,CAAA,KAAM,CAAC,CAAC;IAAEC;EAAc,CAAC,GAAGJ,KAAK;EAE5D,MAAM,CAACF,IAAI,EAAEO,OAAO,CAAC,GAAGb,QAAQ,CAACY,aAAa,CAAC;EAC/C,MAAME,gBAAgB,GAAIC,KAAK,IAAK;IAClC;IACA,MAAMC,WAAW,GAAG;MAAE,GAAGV;IAAK,CAAC;;IAE/B;IACA;IACA;IACAU,WAAW,CAACD,KAAK,CAACE,MAAM,CAACC,IAAI,CAAC,GAAGH,KAAK,CAACE,MAAM,CAACE,KAAK;IAEnDC,OAAO,CAACC,GAAG,CAAC,gBAAgB,EAAEL,WAAW,CAAC;;IAE1C;IACAH,OAAO,CAACG,WAAW,CAAC;EACtB,CAAC;EACD;EACA;EACA;EACA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA,oBACEb,OAAA;IAAMmB,SAAS,EAAC,MAAM;IAAAZ,QAAA,gBACpBP,OAAA,CAACC,WAAW,CAACmB,QAAQ;MACnBJ,KAAK,EAAE;QACLb,IAAI;QACJQ;MACF,CAAE;MAAAJ,QAAA,EAEDA;IAAQ;MAAAc,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACY,eAEvBxB,OAAA;MAAKmB,SAAS,EAAC,aAAa;MAAAZ,QAAA,eAC1BP,OAAA,CAACF,MAAM;QACL2B,IAAI,EAAC,QAAQ;QACbN,SAAS,EAAC,aAAa;QACvBO,OAAO,EAAEA,CAAA,KAAMlB,MAAM,CAACL,IAAI,CAAE;QAAAI,QAAA,EAC7B;MAED;QAAAc,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAS;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QACL;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QACD;AAEX;AAAClB,EAAA,CArDQF,IAAI;AAAAuB,EAAA,GAAJvB,IAAI;AAuDb,eAAeA,IAAI;AAAC,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}